################################################Spring########################################################
spring.application.name=spring-demo1
server.port = 8081
################################################logging#######################################################
logging.level.root = trace
################################################netty service#################################################
nettyserver.host = localhost
nettyserver.port = 18080
################################################thread pool#################################################
threadpool.corePoolSize = 100
threadpool.maximumPoolSize = 1000
threadpool.keepAliveTime = 0
threadpool.queueSize = 1000
################################################Mybatis#######################################################
#init-db= true
mybatis.mapper-locations= classpath:mapping/*.xml
spring.datasource.url= jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false
spring.datasource.username= root
spring.datasource.password= root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name= com.mysql.cj.jdbc.Driver
# 初始化大小，最小，最大
spring.datasource.initialSize=1
spring.datasource.minIdle=3
spring.datasource.maxActive=10
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=25200000
spring.datasource.validationQuery=select 1 from dual
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=false
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
#是否自动回收超时连接
spring.datasource.removeAbandoned=true
#超时时间(以秒数为单位)
spring.datasource.removeAbandonedTimeout=1800

management.endpoints.web.exposure.include=*

#mybatis:
#    mapper-locations: classpath:mapping/*.xml
##datasource
#spring:
#    datasource:
#        name:era
#        url:jdbc:mysql://192.168.244.133:3306/demo?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#        username: root
#        password: 2zhlmcl!HBLSQT
#        # ʹ��druid����Դ
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        # ����Ϊ���ӳصĲ������ã�Ӧ�õ�������������Դ��
#        # ��ʼ����С����С�����
#        initialSize: 5
#        minIdle: 5
#        maxActive: 20
#        # ���û�ȡ���ӵȴ���ʱ��ʱ��
#        maxWait: 60000
#        # ���ü����òŽ���һ�μ�⣬�����Ҫ�رյĿ������ӣ���λ�Ǻ���
#        timeBetweenEvictionRunsMillis: 60000
#        # ����һ�������ڳ�����С�����ʱ�䣬��λ�Ǻ���
#        minEvictableIdleTimeMillis: 300000
#        validationQuery: SELECT 1 FROM DUAL
#        testWhileIdle: true
#        testOnBorrow: false
#        testOnReturn: false
#        # ��PSCache������ָ��ÿ��������PSCache�Ĵ�С
#        poolPreparedStatements: true
#        maxPoolPreparedStatementPerConnectionSize: 20
#        # ���ü��ͳ�����ص�filters��ȥ�����ؽ���sql�޷�ͳ�ƣ�'wall'���ڷ���ǽ
#        spring.datasource.filters: stat,wall,log4j
#        # ͨ��connectProperties��������mergeSql���ܣ���SQL��¼
#        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#        # �ϲ����DruidDataSource�ļ������
#        #useGlobalDataSourceStat: true
###############################################Mybatis Generator#######################################################
#db.example.type=mysql
#db.example.driver=com.mysql.jdbc.Driver
#db.example.url=jdbc:mysql://localhost:3306/demo
#db.example.username=root
#db.example.password=root
#generator.location=C:/Users/wgy/.m2/repository/mysql/mysql-connector-java/5.1.32/mysql-connector-java-5.1.32.jar
#generator.targetPackage.po=com.dtf.demo.po
#generator.targetPackage.mapping=com.dtf.demo.mapping
#generator.targetPackage.dao=com.dtf.demo.dao
#generator.tableName1=Course
#generator.tableName2=Sc
#generator.tableName3=Student
#generator.tableName4=Teacher
